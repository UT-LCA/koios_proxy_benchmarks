# python generate_benchmark.py -i "mux_module,xor_module" -y graphs/bench5.yml -v bench5.v -s 5
dpram1:
 type: "dpram"
 size: 2048
 precision: 40
 number: 2
 inputs: [top]
 outputs: [sysarr1,sysarr2]
sysarr1:
 type: "systolic_array"
 size: 4
 precision: 16
 number: 2
 inputs: [dpram1]
 outputs: [activ1,activ2]
sysarr2:
 type: "systolic_array"
 size: 8
 precision: 16
 number: 2
 inputs: [dpram1,dpram3]
 outputs: [dpram2]
activ1:
 type: "relu"
 size: 32
 precision: 8
 number: 3
 inputs: [sysarr1]
 outputs: [adder_tree1]
activ2:
 type: "tanh"
 size: 32
 precision: 16
 number: 2
 inputs: [sysarr1]
 outputs: [adder_tree1]
dpram2:
 type: "dpram"
 size: 4096
 precision: 40
 number: 8
 inputs: [sysarr2]
 outputs: [adder_tree1]
adder_tree1:
 type: "adder_tree"
 size: 4
 precision: 16
 number: 6
 inputs: [activ1,activ2,dpram2]
 outputs: [sysarr4]
sysarr3:
 type: "systolic_array"
 size: 4
 precision: 16
 number: 1
 inputs: [top]
 outputs: [dpram3,dpram4,activ3]
dpram3:
 type: "dpram"
 size: 2048
 precision: 60
 number: 4
 inputs: [sysarr3]
 outputs: [adder_tree2,sysarr2]
dpram4:
 type: "dpram"
 size: 4096
 precision: 40
 number: 8
 inputs: [sysarr3]
 outputs: [adder_tree2]
activ3:
 type: "sigmoid"
 size: 16
 precision: 16
 number: 4
 inputs: [sysarr3]
 outputs: [adder_tree3]
adder_tree2:
 type: "adder_tree"
 size: 3
 precision: 8
 number: 6
 inputs: [dpram3,dpram4]
 outputs: [adder_tree3]
adder_tree3:
 type: "adder_tree"
 size: 4
 precision: 4
 number: 8
 inputs: [adder_tree2,activ3]
 outputs: [sysarr4]
sysarr4:
 type: "systolic_array"
 size: 8
 precision: 16
 number: 1
 inputs: [adder_tree3,adder_tree1]
 outputs: [dpram5]
dpram5:
 type: "dpram"
 size: 2048
 precision: 40
 number: 4
 inputs: [sysarr4]
 outputs: [top]
